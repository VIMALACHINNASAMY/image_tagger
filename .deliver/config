APP="image_tagger"
AUTO_VERSION=git-revision+git-branch-unless-master

BUILD_AT="/home/worker/Builds/image_tagger"
BUILD_HOST="image-tagger"
BUILD_USER="worker"

PRODUCTION_HOSTS="image-tagger"
PRODUCTION_USER="worker"

DELIVER_TO="/home/worker/Releases/"
RELEASE_DIR="$BUILD_AT/rel/$APP"

pre_erlang_get_and_update_deps() {
  # copy it on the build host to the build directory when building
  status "Copying secret files to build dir"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    local _secret_config="/home/worker/secret/image_tagger"
    __sync_remote " # execute on build host
      cp $_secret_config $BUILD_AT/config/prod.secret.exs
    "
  fi
}

pre_erlang_clean_compile() {
    status "Installing NPM dependencies"
    __sync_remote "  # runs the commands on the build host
      [ -f ~/.profile ] && source ~/.profile # load profile
      set -e # fail if any command fails

      cd '$BUILD_AT/assets' # go to the build directory on the build host
      npm install $SILENCE
    "

    status "Building static files"
    __sync_remote "
      [ -f ~/.profile ]
      set -e

      cd '$BUILD_AT/assets'
      mkdir -p priv/static
      npm run deploy $SILENCE
    "


    status "Running phoenix.digest"
    __sync_remote "
      [ -f ~/.profile ] && source ~/.profile
      set -e

      cd '$BUILD_AT'
      mkdir -p priv/static
      APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE
    "
}

